/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.RestaurantAdminRole;


import userinterface.SystemAdminWorkArea.*;
import Business.Customer.Customer;
import Business.Customer.FoodItem;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Restaurant.Restaurant;
import Business.Role.CustomerRole;
import Business.Role.SystemAdminRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author AEDSpring2019
 */
public class AddFoodItem extends javax.swing.JPanel {

    /**
     * Creates new form AdminScreen
     */
    
    private JPanel userProcessContainer;
    private EcoSystem ecosystem;
    private Restaurant res;
    
 //   private StringBuilder warnMsg;
    
    public AddFoodItem(JPanel panelRight, EcoSystem admin, Restaurant res) {
        initComponents();
       this.res = res;
        this.userProcessContainer = panelRight;
        this.ecosystem = admin;
      //  txtRePword.setBorder(new LineBorder(Color.black));
      //  jLabel3.setForeground(Color.black); 
      //  txtPword.setBorder(new LineBorder(Color.black));
      //  jLabel2.setForeground(Color.black); 
        txtCap.setBorder(new LineBorder(Color.black));
        jLabel1.setForeground(Color.black);    
    //    warnMsg = new StringBuilder();
        warnLabel.setVisible(false);
        
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        btnCreate = new javax.swing.JButton();
        txtCap = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        warnLabel = new javax.swing.JLabel();
        warning1 = new javax.swing.JLabel();
        warning2 = new javax.swing.JLabel();
        rePwdLabel = new javax.swing.JLabel();
        radioLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        resName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        btnCreate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/plus.png"))); // NOI18N
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        jLabel1.setText("<html> <b> <font size=5> Cuisine:");

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/back.png"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        warning1.setForeground(new java.awt.Color(255, 0, 51));

        warning2.setForeground(new java.awt.Color(255, 0, 51));

        rePwdLabel.setForeground(new java.awt.Color(255, 0, 51));

        radioLabel.setForeground(new java.awt.Color(255, 0, 51));

        jLabel4.setText("<html> <b> <font size=5>Name:");

        jLabel5.setText("<html> <b> <font size=7> <u> Add Food Item");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(warnLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(resName))
                                    .addComponent(txtCap, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(warning1)
                                    .addComponent(warning2)
                                    .addComponent(radioLabel)
                                    .addComponent(rePwdLabel))))))
                .addContainerGap(124, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(warnLabel))))
                .addGap(104, 104, 104)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(radioLabel)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(resName, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(warning1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCap, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(warning2))
                .addGap(30, 30, 30)
                .addComponent(rePwdLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCreate)
                .addContainerGap(140, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        if(!usernamePatternCorrect()){
//            txtUser.setText("");
            txtCap.setBorder(new LineBorder(Color.red));
            jLabel1.setForeground(Color.red);
            warning1.setVisible(true);
            warning1.setText("<html> Name cannot be empty <br>");
        }
        else if(usernamePatternCorrect()) {
            txtCap.setBorder(new LineBorder(Color.black));
            jLabel1.setForeground(Color.black);
            warning1.setVisible(false);

            warnLabel.setVisible(false);
            warnLabel.setForeground(Color.red);
            warnLabel.setText("");            
            
        }
        
        
        if(!cuisinePatternCorrect()){
//            txtUser.setText("");
            txtCap.setBorder(new LineBorder(Color.red));
            jLabel1.setForeground(Color.red);
            warning2.setVisible(true);
            warning2.setText("<html> Cuisine cannot be empty field.");
        }
        else if(cuisinePatternCorrect()) {
            txtCap.setBorder(new LineBorder(Color.black));
            jLabel1.setForeground(Color.black);
            warning2.setVisible(false);

            warnLabel.setVisible(false);
            warnLabel.setForeground(Color.red);
            warnLabel.setText("");            
            
        }

        
        if(usernamePatternCorrect() && cuisinePatternCorrect())
        {   
                String foodName = this.resName.getText();
                String cuisine = this.txtCap.getText();
                
                //Restaurant res = new Restaurant(cusName, cap);
                    
               if(res.getMenu().checkIfExists(new FoodItem(foodName, cuisine)))
               {
                   JOptionPane.showMessageDialog(null, "Food Item already exists!");
               }
               else{
                 res.getMenu().addToMenu(foodName, cuisine);   // createRestaurant(foodName,cuisine);
                 JOptionPane.showMessageDialog(null, "Food Item Added Successfully!");            
                
               }
                 txtReset();

            
        }
        else if(this.resName.getText() == "") JOptionPane.showMessageDialog(null, "Customer Name cannot be empty!");
        
    }//GEN-LAST:event_btnCreateActionPerformed

    
      
    private boolean cuisinePatternCorrect(){
        Pattern p = Pattern.compile("^(?!\\s*$).+");
        Matcher m = p.matcher(txtCap.getText());
        boolean b = m.matches();
        return b;
    }

  
    
    
    private void txtReset(){
                 resName.setText("");
                 txtCap.setText("");
            //     txtPword.setText("");
            //     txtRePword.setText("");
    
    }






    // Is Type selected method


//    +[A-Z]{1,}[0-9]{1,}[$*#&]{1,}
    
    // Username pattern correct method
    
    private boolean usernamePatternCorrect(){
        Pattern p = Pattern.compile("^(?!\\s*$).+");
        Matcher m = p.matcher(resName.getText());
        boolean b = m.matches();
        return b;
    
    }






    
    
    
    
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        
        Component[] comps = this.userProcessContainer.getComponents();
        for(Component comp: comps){
            if(comp instanceof ManageMenuJPanel){
                ManageMenuJPanel manageAdmin = (ManageMenuJPanel) comp;
   //             manageAdmin.customerPopulate();
                 manageAdmin.populate();
            
            }
   
        
        }
        
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        userProcessContainer.remove(this);
        layout.previous(userProcessContainer);
        
        

        
        
        
    }//GEN-LAST:event_btnBackActionPerformed

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel radioLabel;
    private javax.swing.JLabel rePwdLabel;
    private javax.swing.JTextField resName;
    private javax.swing.JTextField txtCap;
    private javax.swing.JLabel warnLabel;
    private javax.swing.JLabel warning1;
    private javax.swing.JLabel warning2;
    // End of variables declaration//GEN-END:variables
}
