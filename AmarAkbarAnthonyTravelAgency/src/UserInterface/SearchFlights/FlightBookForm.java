/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SearchFlights;

import Business.Airliners.AircraftFlights;
import Business.Airliners.Airliner;
import Business.Airliners.Airplane;
import Business.Airliners.FlightDates;
import Business.TravelOffice.MainTravelAgency;
import Business.TravelOffice.Customer;
import Business.TravelOffice.Reservations;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JPanel;
import java.util.*;
import javax.swing.JOptionPane;
;

/**
 *
 * @author rohit
 */
public class FlightBookForm extends javax.swing.JPanel {

    /**
     * Creates new form ViewSearchFlightsForm
     */
    
    MainTravelAgency mainTravelAgency;
    JPanel displayPanel;
    String flightNum;
    String flightDate;
    String strDatChk = "";
    String strFligDate = "";
    ArrayList<FlightDates> fl1 = new ArrayList<FlightDates>();
    List<String> cust;
    FlightDates tempFlightDate;
    char recFound = ' ';
    HashMap<Integer, Boolean> hmap1 = new HashMap<Integer,Boolean>();
    Airplane tempAirplane;
    Airliner tempAirliner;
    ArrayList<Customer> cust1;
   
    
    
    
    public FlightBookForm(JPanel displayPanel, MainTravelAgency mainTravelAgency,String flightNum,String flightDate) {
        initComponents();
        this.displayPanel = displayPanel;
        this.mainTravelAgency = mainTravelAgency;
        this.flightDate = flightDate;
        this.flightNum = flightNum;
        
        
        outFlightDate.setText(flightDate);
        outFlightNum.setText(flightNum);
        initialize();
        
        
        
      
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new java.awt.Panel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        outFlightDep = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        outFlightArr = new javax.swing.JTextField();
        outFlightDate = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        outFlightNum = new javax.swing.JTextField();
        inComboCustomer = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setBackground(new java.awt.Color(255, 255, 204));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Flight Booking");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Flight Number");

        outFlightDep.setEditable(false);
        outFlightDep.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        outFlightDep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outFlightDepActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Departure");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Arrival");

        outFlightArr.setEditable(false);
        outFlightArr.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        outFlightDate.setEditable(false);
        outFlightDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Date");

        outFlightNum.setEditable(false);
        outFlightNum.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        inComboCustomer.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        inComboCustomer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        inComboCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inComboCustomerActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Main Passenger");

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Confirm Booking");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(0, 0, 0));
        backBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 0, 51));
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(outFlightDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                        .addComponent(outFlightArr, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(outFlightDep, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(outFlightNum, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(inComboCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 257, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(273, 273, 273))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inComboCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(outFlightNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outFlightDep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(outFlightArr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(outFlightDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
                 String parName = " ";
                 String parTime = " ";
                 ArrayList<Reservations> c1 = new ArrayList<Reservations>();
        
                
                hmap1 = tempFlightDate.getSeatsAllocation();
                int hashCounter = 0;
                
            
           
                int min = 100;
                int max = 999;
                
      
                int random_int = (int) (Math.random() * (max - min + 1) + min); 
      

                String parFlight = outFlightNum.getText();
                String parDate   = outFlightDate.getText();
                String parOrigin = outFlightDep.getText();
                String parDest   = outFlightArr.getText();
                String parSeats  = " ";
                String parPNR = " ";
                
                String airliner  = tempAirliner.getAirlineName();
                float  chkTime   = tempFlightDate.getFlightTime();
                
                
                
                String custName = " ";
                
                 custName = String.valueOf(inComboCustomer.getSelectedItem());
                
                if("null".equals(custName)){
                    JOptionPane.showMessageDialog(null, "Please enter a customer");
                      return;}
                
                if (custName!= "null"){
                Customer cusObj = this.mainTravelAgency.getCustomers().searchAccount(custName);
     
                if (cusObj!= null){
               // parTime =  String.valueOf(tempFlightDate.getFlightTime());
                parTime =  String.format("%.2f", tempFlightDate.getFlightTime()).replace(' ', '0');
                c1 = cusObj.getReservationsAList();
                
                for(Reservations r1 : c1){
                    
                    if(r1.getDate().equals(parDate))
                      if(Float.parseFloat(r1.getTime()) < chkTime + 4){
                      JOptionPane.showMessageDialog(null, "Passenger has another reservation in this time frame");
                      return;
                      }
                }
                
               
                
                // Block the Seat
                
                    for (Map.Entry mapElement : hmap1.entrySet()) { 
                boolean check = (boolean) mapElement.getValue();
                if(check == true)
                    hashCounter = hashCounter + 1;
            }
                
                
                
                int avlSeatCounter = tempAirplane.getNoOfSeats()- hashCounter;
                if(avlSeatCounter > 0){
                   hmap1.put(hashCounter+1, true);   
                
                tempFlightDate.setSeatsAllocation(hmap1);
                
                
                }
                
                 // Add a Reservation object and attach it to Customer
                parSeats  = String.valueOf(hashCounter+1);
                parPNR    = "HEF" + String.valueOf(random_int); 
                
                
                cusObj.addReservation(parSeats,parOrigin,parDest ,parDate,parTime,parFlight,airliner);
                parName = cusObj.getfirstName();
            
                
                }
                }
                
                
                
                CardLayout layout = (CardLayout)displayPanel.getLayout();
                displayPanel.add(new ConfirmedTicketForm(displayPanel, mainTravelAgency,parFlight,parDate,parOrigin,parDest,parSeats,parPNR,parName,parTime));
                layout.next(displayPanel); 


        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        
        CardLayout layout = (CardLayout)displayPanel.getLayout();
        displayPanel.remove(this);
        layout.previous(displayPanel);
        
    }//GEN-LAST:event_backBtnActionPerformed

    private void inComboCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inComboCustomerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inComboCustomerActionPerformed

    private void outFlightDepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outFlightDepActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_outFlightDepActionPerformed

    private void initialize(){
        
        
        //Search for the selected record;
         recFound = ' ';
        
     for(Airliner ar1 : this.mainTravelAgency.getAirliners()){
            for(Airplane ap1 : ar1.getFleet().getAirplanes()){
                
                   for(AircraftFlights newF1 : ap1.getFlights()){
                String chkFlightNum = newF1.getFlightNumber();
                
                 if (chkFlightNum.equals(this.flightNum) == true)
                    
                     fl1 = newF1.getFlightDates();
                
   
                     for(FlightDates flCheck : fl1){
                  
                     SimpleDateFormat formatter1 = new SimpleDateFormat("MM/dd/YYYY");  
                 
                     strDatChk = formatter1.format(flCheck.getDates()); 
                     
                     
                     if(this.flightDate.equals(strDatChk)){
                        tempFlightDate =   flCheck;
                        tempAirplane   =   ap1;
                        tempAirliner   =   ar1;
          
                        outFlightDep.setText(newF1.getOriginCity());
                        outFlightArr.setText(newF1.getDestinationCity());
               
               recFound = 'y';
                 break;
                     }
            }
                     if(recFound == 'y')
                         break;
        }
            if(recFound == 'y')
                       break;
        }
            if(recFound == 'y')
                       break;
        
     }
         // Fill the combobox with Customers
           inComboCustomer.removeAllItems();
           cust1 = this.mainTravelAgency.getCustomers().getCustomers();
           
            if(cust1 != null){
               
           
              for (int i = 0; i < cust1.size(); i++){

                inComboCustomer.addItem(cust1.get(i).getfirstName());
               }
           
          
              }
        
    } 
        
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JComboBox<String> inComboCustomer;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField outFlightArr;
    private javax.swing.JTextField outFlightDate;
    private javax.swing.JTextField outFlightDep;
    private javax.swing.JTextField outFlightNum;
    private java.awt.Panel panel1;
    // End of variables declaration//GEN-END:variables
}
